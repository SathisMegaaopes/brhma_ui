 <Grid item xs={6}>
                            <TextField
                                required
                                id='employee_dob'
                                fullWidth
                                label="Date of Birth"
                                variant='outlined'
                                placeholder='Enter Date of Birth'
                                type='date'
                                // inputMode=''
                                // size='medium'
                                // value={}
                                // error={}
                                // onChange={}
                                // onFocus={} //This is to handle the error...
                                // onBlur={} //This for calling api to check if the employee Number is already exists...
                                // helperText={}
                                inputProps={{
                                    maxLength: 10,
                                }}
                                onInput={(e) => {
                                    e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
                                }}
                            />
                        </Grid>

<Grid item xs={6}>
<TextField
    required
    id='employee_doj'
    fullWidth
    label="Date of Join"
    variant='outlined'
    placeholder='Enter Date of Join'
    type='date'
// inputMode=''
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

<Grid item xs={6}>
<FormControl fullWidth size='medium' required>
    <InputLabel id="gender">Gender</InputLabel>
    <Select
        id="gender"
        fullWidth
        label="Gender"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>Male</MenuItem>
        <MenuItem value={"Female"}>Female</MenuItem>
        <MenuItem value={"Others"}>Others</MenuItem>
    </Select>
</FormControl>
</Grid>

<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Reporting Manager</InputLabel>
    <Select
        id="Reporting_Manager"
        label="Reporting Manager"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>One</MenuItem>
        <MenuItem value={"Female"}>Two</MenuItem>
        <MenuItem value={"Others"}>Three</MenuItem>
    </Select>
</FormControl>
</Grid>


<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Reporting Team Lead</InputLabel>
    <Select
        id="Reporting Team Lead"
        label="Reporting Team Lead"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>One</MenuItem>
        <MenuItem value={"Female"}>Two</MenuItem>
        <MenuItem value={"Others"}>Three</MenuItem>
    </Select>
</FormControl>
</Grid>
<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Designation</InputLabel>
    <Select
        id="Designation"
        label="Designation"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>One</MenuItem>
        <MenuItem value={"Female"}>Two</MenuItem>
        <MenuItem value={"Others"}>Three</MenuItem>
    </Select>
</FormControl>
</Grid>
<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Department</InputLabel>
    <Select
        id="Department"
        label="Department"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>One</MenuItem>
        <MenuItem value={"Female"}>Two</MenuItem>
        <MenuItem value={"Others"}>Three</MenuItem>
    </Select>
</FormControl>
</Grid>
<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Team</InputLabel>
    <Select
        id="Team"
        label="Team"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Male"}>One</MenuItem>
        <MenuItem value={"Female"}>Two</MenuItem>
        <MenuItem value={"Others"}>Three</MenuItem>
    </Select>
</FormControl>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Salary_Offered'
    fullWidth
    label="Salary Offered"
    variant='outlined'
    placeholder='Enter Salary Offered (Monthly Net)'
    type='number'
    inputMode='numeric'
    // size='medium'
    // value={}
    // error={}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    // helperText={}
    inputProps={{
        maxLength: 10,
    }}
    onInput={(e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
    }}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Attendance_Bonus'
    fullWidth
    label="Attendance Bonus"
    variant='outlined'
    // placeholder='Enter Salary Offered (Monthly Net)'
    // type='number'
    // inputMode='numeric'
    // size='medium'
    // value={}
    error={true}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    helperText={"Need to work on this again .."}
    inputProps={{
        maxLength: 10,
    }}
    onInput={(e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
    }}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Total_Monthly_CTC'
    fullWidth
    label="Total Monthly CTC"
    variant='outlined'
    // placeholder='Enter Salary Offered (Monthly Net)'
    // type='number'
    // inputMode='numeric'
    // size='medium'
    // value={}
    error={true}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    helperText={"Need to work on this again .."}
    inputProps={{
        maxLength: 10,
    }}
    onInput={(e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
    }}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Total_Yearly_CTC'
    fullWidth
    label="Total Yearly CTC"
    variant='outlined'
    // placeholder='Enter Salary Offered (Yearly Net)'
    // type='number'
    // inputMode='numeric'
    // size='medium'
    // value={}
    error={true}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    helperText={"Need to work on this again .."}
    inputProps={{
        maxLength: 10,
    }}
    onInput={(e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
    }}
/>
</Grid>
<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Billable Status</InputLabel>
    <Select
        id="Billable_Status"
        label="Billable Status"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Billable"}>Billable</MenuItem>
        <MenuItem value={"Non-Billable"}>Non-Billable</MenuItem>
        <MenuItem value={"Partially Billed"}>Partially Billed</MenuItem>
    </Select>
</FormControl>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Employee_Confirmation_Status '
    fullWidth
    // label="Employee Confirmation Status "
    variant='outlined'
    // placeholder='Enter Salary Offered (Yearly Net)'
    type='date'
    // size='medium'
    // value={}
    error={true}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    helperText={"Need to work on this again .."}
    inputProps={{
        maxLength: 10,
    }}
    onInput={(e) => {
        e.target.value = e.target.value.replace(/[^0-9]/g, '');  // Replace any non-digit characters
    }}
/>
</Grid>
<Grid item xs={6}>
<TextField fullWidth
    id="email"
    label="Email"
    variant="outlined"
    required
    // error={error}
    type='email'
    inputMode='email'
// value={email}
// helperText={helperText}
// onChange={handleEmailChange}
/>
</Grid>
<Grid item xs={6}>
<TextField
    fullWidth
    id="Phone_number"
    label="Enter Phone Number"
    variant="outlined"
    type='number'
    inputMode='numeric'
// value={mobile2}
// onChange={e => setMobile2(e.target.value)}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    fullWidth
    id="Mobile_number"
    label="Enter Mobile Number"
    variant="outlined"
    type='number'
    inputMode='numeric'
// value={mobile2}
// onChange={e => setMobile2(e.target.value)}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    id='Emergency_Contact_Name'
    fullWidth
    label="Emergency Contact Name"
    variant='outlined'
    placeholder='Enter Emergency Contact Name'
    type='text'
    inputMode='text'
// value={mobile2}
// onChange={e => setMobile2(e.target.value)}
/>
</Grid>
<Grid item xs={6}>
<TextField
    required
    fullWidth
    id="Emergency_Contact_Number "
    label="Enter Emergency Contact Number"
    variant="outlined"
    type='number'
    inputMode='numeric'
// value={mobile2}
// onChange={e => setMobile2(e.target.value)}
/>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='emergency_contact_relation'
    fullWidth
    label="Emergency Contact Relation (Should be blood relative)"
    variant='outlined'
    placeholder='Enter Emergency Contact Relation (Should be blood relative)'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='father_name'
    fullWidth
    label="Father Name"
    variant='outlined'
    placeholder='Enter Father Name'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='father_occupation'
    fullWidth
    label="Father Occupation"
    variant='outlined'
    placeholder='Enter Father Occupation'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='Spouse Name'
    fullWidth
    label="Spouse Name"
    variant='outlined'
    placeholder='Enter Spouse Name'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='blood_group'
    fullWidth
    label="Blood Group"
    variant='outlined'
    placeholder='Enter Blood Group'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='country_of_origin'
    fullWidth
    label="Country of Origin"
    variant='outlined'
    placeholder='Enter Country of Origin'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='nationality'
    fullWidth
    label="Nationality"
    variant='outlined'
    placeholder='Enter Nationality'
    type='text'
    inputMode='text'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Physically Challenged </InputLabel>
    <Select
        id="physically_challenged"
        label="Physically Challenged"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Yes"}>Yes</MenuItem>
        <MenuItem value={"No"}>No</MenuItem>
    </Select>
</FormControl>
</Grid>


{/* Important ithu vanthu accounts oriented ones  */}

<Grid item xs={6}>
<TextField
    required
    id='aadhaar_number'
    fullWidth
    label="Aadhaar Number"
    variant='outlined'
    placeholder='Enter Aadhaar Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='pan_number'
    fullWidth
    label="Pan Number"
    variant='outlined'
    placeholder='Enter Pan Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>



<Grid item xs={6}>
<TextField
    required
    id='passport_number'
    fullWidth
    label="Passport Number"
    variant='outlined'
    placeholder='Enter Passport Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='bank_account_number'
    fullWidth
    label="Bank Account Number"
    variant='outlined'
    placeholder='Enter Bank Account  Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='bank_ifsc_code'
    fullWidth
    label="Bank IFSC Code"
    variant='outlined'
    placeholder='Enter Bank IFSC Code'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='ceneficiary_code'
    fullWidth
    // label="Bank IFSC Code"
    variant='outlined'
    placeholder='Beneficiary Code'
    // type=''
    // inputMode='numeric'
    // size='medium'
    // value={}
    error={true}
    // onChange={}
    // onFocus={} //This is to handle the error...
    // onBlur={} //This for calling api to check if the employee Number is already exists...
    helperText={"This is Beneficiary Code used , Will be automatically genarated....."}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='education'
    fullWidth
    label="Education "
    variant='outlined'
    placeholder='Enter Education – Highest Degree'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

{/* Current Address */}
<Grid item xs={6}>
<TextField
    required
    id='Employee AddressCurrent'
    fullWidth
    label="Employee Address"
    variant='outlined'
    placeholder='Enter Employee Current Address'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='Area'
    fullWidth
    label="Area"
    variant='outlined'
    placeholder='Enter Area'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='pin_code'
    fullWidth
    label="Area"
    variant='outlined'
    placeholder='Enter Area'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

{/* Permanent Address */}


<Grid item xs={6}>
<TextField
    required
    id='Employee Address Permanent'
    fullWidth
    label="Employee Address - Permanent"
    variant='outlined'
    placeholder='Enter Employee Permanent Address'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='AreaPermanent'
    fullWidth
    label="AreaPermanent"
    variant='outlined'
    placeholder='Enter Area '
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='pin_codePermanent'
    fullWidth
    label="pin_codePermanent"
    variant='outlined'
    placeholder='Enter pin_codePermanent'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<FormControl fullWidth required>  {/* This ensures full width within the grid item */}
    <InputLabel>Address Proof</InputLabel>
    <Select
        id="address_proof"
        label="Physically Challenged"
    // value={gender}
    // error={gender === "" ? true : false}
    // onChange={e => setGender(e.target.value)}
    >
        <MenuItem value={"Aadhaar"}>Aadhaar</MenuItem>
        <MenuItem value={"Driving License"}>Driving License</MenuItem>
        <MenuItem value={"Bank Statement"}>Bank Statement</MenuItem>
        <MenuItem value={"Phone Bill"}> Phone Bill</MenuItem>
        <MenuItem value={"Gas Bill"}> Gas Bill</MenuItem>
    </Select>
</FormControl>
</Grid>

<Grid item xs={6}>
<Typography>
    This is the File Upload for the Address Prof...
</Typography>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='esi_number'
    fullWidth
    label="ESI Number"
    variant='outlined'
    placeholder='Enter ESI Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='uan_number'
    fullWidth
    label="UAN Number"
    variant='outlined'
    placeholder='Enter UAN Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>

<Grid item xs={6}>
<TextField
    required
    id='pf_number'
    fullWidth
    label="PF Number"
    variant='outlined'
    placeholder='Enter PF Number'
    type='number'
    inputMode='numeric'
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>


<Grid item xs={6}>
<TextField
    required
    id='pf_join_date'
    fullWidth
    label="PF Join Date"
    variant='outlined'  
    placeholder='Enter PF Join Date'
    type='date'
// inputMode=''
// size='medium'
// value={}
// error={}
// onChange={}
// onFocus={} //This is to handle the error...
// onBlur={} //This for calling api to check if the employee Number is already exists...
// helperText={}
/>
</Grid>











tooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
important dude , Sathis dude ......


    const { sharedTab, setSharedTab } = useSharedContext();

    // Get query parameters from URL
    const { search } = useLocation();
    const queryParams = new URLSearchParams(search);

    // Set initial active tab based on query parameter or default to 'tasks'
    const [activeTab, setActiveTab] = useState(queryParams.get('tab'));
    const [isOpen, setIsOpen] = useState(false);

    // Use navigate to programmatically change the URL
    const navigate = useNavigate();

    // Get user info from session storage (assuming you have this set up)
    const userinfo = JSON.parse(sessionStorage.getItem("user_info"));
    const AuthorizedPerson = userinfo?.user_role; // Handle if userinfo is null or undefined

    // Update active tab based on sharedTab value
    useEffect(() => {
        if (sharedTab.active === 1) {
            setActiveTab('particularEmployee');
        }
        //  else {
        //     setActiveTab('tasks');
        // }
    }, [sharedTab.active]);

    // Navigate and set query params whenever the active tab changes
    useEffect(() => {
        const tabParam = `?tab=${activeTab}`;

        // Switch to the correct URL based on the active tab
        switch (activeTab) {
            case 'tasks':
                navigate(`/dashboard${tabParam}`);
                break;
            case 'CandidateEvaluation':
                navigate(`/dashboard/evalution${tabParam}`);
                break;
            case 'CandidateDatabase':
                navigate(`/dashboard/candidate-master${tabParam}`);
                break;
            case 'particularEmployee':
                navigate(`${sharedTab.TabUrl}${tabParam}`);
                break;
            case 'EmployeeMaster':
                navigate(`/dashboard/employee-master${tabParam}`);
                break;
            default:
                navigate(`/dashboard${tabParam}`);
        }
    }, [activeTab, navigate]);

    // Handle tab changes
    const handleTabChange = (tab) => {
        setActiveTab(tab);
        // Reset shared tab data when switching tabs
        setSharedTab({
            Tabname: null,
            TabUrl: null,
            active: 0,
            backendUrl: null
        });
    };

    // Handle mouse events for hover effects (e.g., for sidebar behavior)
    const handleMouseEnter = () => setIsOpen(true);
    const handleMouseLeave = () => setIsOpen(false);

    // Render the correct component based on the active tab
    const renderContent = () => {
        switch (activeTab) {
            case 'tasks':
                return <MOSDashboard />;
            case 'CandidateEvaluation':
                return <CandidateInterview />;
            case 'CandidateDatabase':
                return <MOSCandidate />;
            case 'particularEmployee': {
                // Get additional query params for particularEmployee
                const employid = queryParams.get('employid');
                const fromdate = queryParams.get('fromdate');
                const todate = queryParams.get('todate');
                return <MOSCandidate emp_id={employid} fromDate={fromdate} toDate={todate} />;
            }
            case 'EmployeeMaster':
                return <EmployeeTable />;
            default:
                return <MOSDashboard />;
        }
    };






 // const { sharedTab, setSharedTab } = useSharedContext();
    // const { search } = useLocation();
    // const queryParams = new URLSearchParams(search);
    // const [isOpen, setIsOpen] = useState(false);
    // const [activeTab, setActiveTab] = useState('tasks');

    // const navigate = useNavigate();

    // const userinfo = JSON.parse(sessionStorage.getItem("user_info"));

    // const AuthorizedPerson = userinfo.user_role


    // React.useEffect(() => {
    //     if (sharedTab.active === 1) {
    //         setActiveTab('particularEmployee')
    //     } else {
    //         setActiveTab('tasks')
    //     }
    // }, [sharedTab.active])


    // React.useEffect(() => {
    //     switch (activeTab) {
    //         case 'tasks':
    //             navigate("/dashboard");
    //             break;
    //         case 'CandidateEvaluation':
    //             navigate("/dashboard/evalution");
    //             break;
    //         case 'CandidateDatabase':
    //             // navigate("/dashboard/candidate-master");
    //             navigate(`/dashboard/${candidate-master}`);
    //             break;
    //         case 'particularEmployee':
    //             navigate(sharedTab.TabUrl);
    //             break;
    //         case 'EmployeeMaster':
    //             navigate('/dashboard/employee-master');
    //             break;
    //         default:
    //             navigate("/");
    //     }
    // }, [activeTab, navigate]);


    // const handleMouseEnter = () => {
    //     setIsOpen(true);
    // };


    // const handleMouseLeave = () => {
    //     setIsOpen(false);
    // };


    // const handleTabChange = (tab) => {
    //     setActiveTab(tab);
    //     setSharedTab({
    //         Tabname: null,
    //         TabUrl: null,
    //         active: 0,
    //         backendUrl: null
    //     })
    // };


    // const renderContent = () => {
    //     switch (activeTab) {
    //         case 'tasks':
    //             return <MOSDashboard />;
    //         case 'CandidateEvaluation':
    //             return <CandidateInterview />;
    //         case 'CandidateDatabase':
    //             return <MOSCandidate />;
    //         case 'particularEmployee':

    //             const employid = queryParams.get('employid');
    //             const fromdate = queryParams.get('fromdate');
    //             const todate = queryParams.get('todate');

    //             return <MOSCandidate emp_id={employid} fromDate={fromdate} toDate={todate} />;
    //         case 'EmployeeMaster':
    //             return <EmployeeTable />

    //         default:
    //             return <MOSDashboard />;
    //     }
    // };




















                    {activeStep === 0 && (
                        <>
                            <Grid container xs={12} paddingLeft={0}  > {/* First Half  Parent Container */}

                                <Grid container xs={2} > {/* Avatar container */}

                                    <Grid item xs={12} paddingLeft={5}>
                                        <Avatar
                                            sx={{ width: 200, height: 200 }}
                                            alt="Profile Image"
                                            src="https://images.pexels.com/photos/4629633/pexels-photo-4629633.jpeg?cs=srgb&dl=pexels-cottonbro-4629633.jpg&fm=jpg"
                                        // src='Uploads/2024/10/ProfileFolder/MOS20241001426_Screenshot from 2024-08-12 20-30-00.png'
                                        />

                                    </Grid>

                                </Grid>

                                <Grid container xs={10} paddingLeft={6} columnGap={2} >  {/* Basic Details , like name and other container */}

                                    <Grid container xs={6} spacing={1} >  {/* First Half container */}

                                        <Grid container >
                                            <Grid xs={6} container alignItems="center" paddingBottom={2} >
                                                <Grid item xs={4}>
                                                    <StyledLabel>
                                                        First Name <span style={{ color: 'red' }}>*</span>
                                                    </StyledLabel>
                                                </Grid>
                                                <Grid item xs={6}>
                                                    <Controller
                                                        name="firstname"
                                                        control={control}
                                                        defaultValue={formData.firstname}
                                                        render={({ field }) => (
                                                            <StyledInput
                                                                fullWidth
                                                                {...field}
                                                                variant="outlined"
                                                                error={!!errors.firstname}
                                                                helperText={errors.firstname ? errors.firstname.message : ''}
                                                                FormHelperTextProps={{
                                                                    style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                }}
                                                                onChange={(e) => {
                                                                    field.onChange(e);
                                                                    setFormData((prev) => ({
                                                                        ...prev,
                                                                        firstname: e.target.value,
                                                                    }));
                                                                }}
                                                            />
                                                        )}
                                                    />
                                                </Grid>
                                            </Grid>

                                            <Grid xs={6} container alignItems="center" paddingBottom={2} >
                                                <Grid item xs={4}>
                                                    <StyledLabel>
                                                        Last Name <span style={{ color: 'red' }}>*</span>
                                                    </StyledLabel>
                                                </Grid>
                                                <Grid item xs={6}>
                                                    <Controller
                                                        name="lastname"
                                                        control={control}
                                                        defaultValue={formData.lastname}
                                                        render={({ field }) => (
                                                            <StyledInput
                                                                fullWidth
                                                                {...field}
                                                                variant="outlined"
                                                                error={!!errors.lastname}
                                                                helperText={errors.lastname ? errors.lastname.message : ''}
                                                                FormHelperTextProps={{
                                                                    style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                }}
                                                                onChange={(e) => {
                                                                    field.onChange(e);
                                                                    setFormData((prev) => ({
                                                                        ...prev,
                                                                        lastname: e.target.value,
                                                                    }));
                                                                }}
                                                            />
                                                        )}
                                                    />
                                                </Grid>
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Employee Number <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="employeeNumber"
                                                    control={control}
                                                    defaultValue={formData.employeeNumber}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            variant="outlined"
                                                            error={!!errors.employeeNumber}
                                                            helperText={errors.employeeNumber ? errors.employeeNumber.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Email Address <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="email"
                                                    control={control}
                                                    defaultValue={formData.email}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            variant="outlined"
                                                            error={!!errors.email}
                                                            helperText={errors.email ? errors.email.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Mobile Number <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="mobileNumber"
                                                    control={control}
                                                    defaultValue={formData.mobileNumber}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            variant="outlined"
                                                            error={!!errors.mobileNumber}
                                                            helperText={errors.mobileNumber ? errors.mobileNumber.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                    </Grid>

                                    <Grid container xs={6} spacing={1} >  {/* Second Half  container */}

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Date of Birth <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="dateOfBirth"
                                                    control={control}
                                                    defaultValue={formData.dateOfBirth}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            type="date"
                                                            variant="outlined"
                                                            InputLabelProps={{ shrink: true }}
                                                            error={!!errors.dateOfBirth}
                                                            helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'relative', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Gender <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="gender"
                                                    control={control}
                                                    defaultValue={formData.gender}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            select
                                                            variant="outlined"
                                                            error={!!errors.gender}
                                                            helperText={errors.gender ? errors.gender.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                            sx={{
                                                                '& .MuiSelect-icon': {
                                                                    fontSize: '30px',
                                                                    color: '#2196f3'
                                                                }
                                                            }}
                                                        >
                                                            <MenuItem value="Male">Male</MenuItem>
                                                            <MenuItem value="Female">Female</MenuItem>
                                                            <MenuItem value="Others">Others</MenuItem>
                                                        </StyledInput>
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Phone Number <span style={{ color: 'red' }}>*</span>
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="phone"
                                                    control={control}
                                                    defaultValue={formData.phone}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            variant="outlined"
                                                            error={!!errors.phone}
                                                            helperText={errors.phone ? errors.phone.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                        <Grid container alignItems="center" paddingBottom={2}>
                                            <Grid item xs={4}>
                                                <StyledLabel>
                                                    Blood Group
                                                </StyledLabel>
                                            </Grid>
                                            <Grid item xs={7}>
                                                <Controller
                                                    name="bloodGroup"
                                                    control={control}
                                                    defaultValue={formData.bloodGroup}
                                                    render={({ field }) => (
                                                        <StyledInput
                                                            fullWidth
                                                            {...field}
                                                            variant="outlined"
                                                            error={!!errors.bloodGroup}
                                                            helperText={errors.bloodGroup ? errors.bloodGroup.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            </Grid>
                                        </Grid>

                                    </Grid>

                                </Grid>

                            </Grid>

                            <Grid container xs={12} bgcolor={''} marginTop={2}  > {/* Second Half Parent Container */}

                                <Grid container xs={4} bgcolor={''} > {/* Second Half child - 1  Container */}

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Date of Joining <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="dateOfJoining"
                                                control={control}
                                                defaultValue={formData.dateOfJoining}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        type="date"
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        InputLabelProps={{ shrink: true }}
                                                        error={!!errors.dateOfJoining}
                                                        helperText={errors.dateOfJoining ? errors.dateOfJoining.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Date of Joining <span style={{ color: 'red' }}>*</span></span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Emergency Contact Name <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="emergencyContactName"
                                                control={control}
                                                defaultValue={formData.emergencyContactName}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.emergencyContactName}
                                                        helperText={errors.emergencyContactName ? errors.emergencyContactName.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Emergency Contact Name <span style={{ color: 'red' }}>*</span></span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Emergency Contact Number <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="emergencyContactNumber"
                                                control={control}
                                                defaultValue={formData.emergencyContactNumber}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.emergencyContactNumber}
                                                        helperText={errors.emergencyContactNumber ? errors.emergencyContactNumber.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Emergency Contact Number <span style={{ color: 'red' }}>*</span></span>}
                                                    />
                                                )}
                                            />
                                        </Grid>

                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Emergency Contact Relation (Should be blood relative) <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="emergencyContactRelation"
                                                control={control}
                                                defaultValue={formData.emergencyContactRelation}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.emergencyContactRelation}
                                                        helperText={errors.emergencyContactRelation ? errors.emergencyContactRelation.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Emergency Contact Relation (Should be blood relative) <span style={{ color: 'red' }}>*</span></span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                </Grid>

                                <Grid container xs={4} bgcolor={''}> {/* Second Half child - 2 Container */}

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Father's Name <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="fathersName"
                                                control={control}
                                                defaultValue={formData.fathersName}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.fathersName}
                                                        helperText={errors.fathersName ? errors.fathersName.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Father's Name <span style={{ color: 'red' }}>*</span></span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Father's Occupation
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="fathersOccupation"
                                                control={control}
                                                defaultValue={formData.fathersOccupation}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.fathersOccupation}
                                                        helperText={errors.fathersOccupation ? errors.fathersOccupation.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Father's Occupation</span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Spouse Name
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="spouseName"
                                                control={control}
                                                defaultValue={formData.spouseName}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.spouseName}
                                                        helperText={errors.spouseName ? errors.spouseName.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Spouse Name</span>}
                                                    />
                                                )}
                                            />
                                        </Grid>

                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>

                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Education (Highest Level) <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="education"
                                                control={control}
                                                defaultValue={formData.education}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.education}
                                                        helperText={errors.education ? errors.education.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Spouse Name</span>}
                                                    />
                                                )}
                                            />
                                        </Grid>

                                    </Grid>

                                </Grid>

                                <Grid container xs={4} bgcolor={''}> {/* Second Half child - 3 Container */}

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Country of Origin
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="countryOfOrigin"
                                                control={control}
                                                defaultValue={formData.countryOfOrigin}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.countryOfOrigin}
                                                        helperText={errors.countryOfOrigin ? errors.countryOfOrigin.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Country of Origin</span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Nationality
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="nationality"
                                                control={control}
                                                defaultValue={formData.nationality}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.nationality}
                                                        helperText={errors.nationality ? errors.nationality.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Nationality</span>}
                                                    />
                                                )}
                                            />
                                        </Grid>
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>
                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Physically Challenged (Yes/No)
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="physicallyChallenged"
                                                control={control}
                                                defaultValue={formData.physicallyChallenged}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        select
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.physicallyChallenged}
                                                        helperText={errors.physicallyChallenged ? errors.physicallyChallenged.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                    // label={<span>Physically Challenged (Yes/No)</span>}
                                                    >
                                                        <MenuItem value="Yes">Yes</MenuItem>
                                                        <MenuItem value="No">No</MenuItem>
                                                    </StyledInput>
                                                )}
                                            />
                                        </Grid>

                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>

                                        <Grid item xs={4}>
                                            <StyledLabel>
                                                Address Proof <span style={{ color: 'red' }}>*</span>
                                            </StyledLabel>
                                        </Grid>
                                        <Grid item xs={7}>
                                            <Controller
                                                name="addressprofType"
                                                control={control}
                                                defaultValue={formData.addressprofType}
                                                render={({ field }) => (
                                                    <StyledInput
                                                        {...field}
                                                        select
                                                        variant="outlined"
                                                        fullWidth
                                                        margin="normal"
                                                        error={!!errors.addressprofType}
                                                        helperText={errors.addressprofType ? errors.addressprofType.message : ''}
                                                        FormHelperTextProps={{
                                                            style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                        }}
                                                        onChange={(e) => {
                                                            field.onChange(e);
                                                            setFormData((prev) => ({
                                                                ...prev,
                                                                addressprofType: e.target.value,
                                                            }));
                                                        }}
                                                    >
                                                        <MenuItem value="Aadhaar">Aadhaar</MenuItem>
                                                        <MenuItem value="Driving License">Driving License</MenuItem>
                                                        <MenuItem value="Bank Statement">Bank Statement</MenuItem>
                                                        <MenuItem value="Phone Bill">Phone Bill</MenuItem>
                                                        <MenuItem value="Gas Bill">Gas Bill</MenuItem>
                                                        <MenuItem value="Gas Bill">Passport</MenuItem>
                                                    </StyledInput>
                                                )}
                                            />
                                        </Grid>

                                    </Grid>
                                </Grid>

                            </Grid>
                        </>
                    )}

                    {activeStep === 1 && (
                        <>
                            <Grid container xs={4} bgcolor={''}> {/* First vertical page 2 Container */}

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Reporting Manager <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>

                                    <Grid item xs={7}>

                                        <Controller
                                            name="reportingmanager"
                                            control={control}
                                            defaultValue={formData.reportingmanager}
                                            render={({ field }) => (
                                                <Autocomplete
                                                    {...field}
                                                    options={[
                                                        { label: 'Kannan R', value: 'Kannan R' },
                                                        { label: 'Shamala Nagaveni', value: 'Shamala Nagaveni' },
                                                        { label: 'Sathis Kumar', value: 'Sathis Kumar' },
                                                        { label: 'Santhosh', value: 'Santhosh' }
                                                    ]}
                                                    isOptionEqualToValue={(option, value) => option.value === value}

                                                    onChange={(event, value) => field.onChange(value ? value.value : '')}

                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            error={!!errors.reportingmanager}
                                                            helperText={errors.reportingmanager ? errors.reportingmanager.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />

                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Reporting Team Lead <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="reportingteamlead"
                                            control={control}
                                            defaultValue={formData.reportingteamlead}
                                            render={({ field }) => (

                                                <Autocomplete
                                                    {...field}
                                                    options={[
                                                        { label: 'Kannan R  ', value: 'Kannan R' },
                                                        { label: 'Shamala Nagaveni ', value: 'Shamala Nagaveni' },
                                                        { label: 'Sathis Kumar ', value: 'Sathis Kumar' },
                                                        { label: 'Santhosh ', value: 'Santhosh' }
                                                    ]}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            // label={<span>Reporting Manager <span style={{ color: 'red' }}> * </span></span>}
                                                            error={!!errors.reportingteamlead}
                                                            helperText={errors.reportingteamlead ? errors.reportingteamlead.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Designation <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="designation"
                                            control={control}
                                            defaultValue={formData.designation}
                                            render={({ field }) => (

                                                <Autocomplete
                                                    {...field}
                                                    options={mapOptions(Designations)}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            error={!!errors.designation}
                                                            helperText={errors.designation ? errors.designation.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Department <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="department"
                                            control={control}
                                            defaultValue={formData.department}
                                            render={({ field }) => (

                                                <Autocomplete
                                                    {...field}
                                                    options={mapOptions(Department)}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            error={!!errors.department}
                                                            helperText={errors.department ? errors.department.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Team <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="team"
                                            control={control}
                                            defaultValue={formData.team}
                                            render={({ field }) => (
                                                <Autocomplete
                                                    {...field}
                                                    options={mapOptions(Teams)}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            error={!!errors.team}
                                                            helperText={errors.team ? errors.team.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Referred By <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="referrdby"
                                            control={control}
                                            defaultValue={formData.referrdby}
                                            render={({ field }) => (

                                                <Autocomplete
                                                    {...field}
                                                    options={[
                                                        { label: 'Kannan R  ', value: 'Kannan R' },
                                                        { label: 'Shamala Nagaveni ', value: 'Shamala Nagaveni' },
                                                        { label: 'Sathis Kumar ', value: 'Sathis Kumar' },
                                                        { label: 'Santhosh ', value: 'Santhosh' }
                                                    ]}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            // label={<span>Reporting Manager <span style={{ color: 'red' }}> * </span></span>}
                                                            error={!!errors.referrdby}
                                                            helperText={errors.referrdby ? errors.referrdby.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Employment Status <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="employmentstatus"
                                            control={control}
                                            defaultValue={formData.employmentstatus}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    select
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.employmentstatus}
                                                    helperText={errors.employmentstatus ? errors.employmentstatus.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                >
                                                    <MenuItem value="Probation">Probation</MenuItem>
                                                    <MenuItem value="Confirmed">Confirmed</MenuItem>
                                                </StyledInput>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>

                            <Grid container xs={4} bgcolor={''}> {/* Second vertical page 2 Container */}

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Employee Status <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="employeestatus"
                                            control={control}
                                            defaultValue={formData.employeestatus}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    select
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.employeestatus}
                                                    helperText={errors.employeestatus ? errors.employeestatus.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                >
                                                    <MenuItem value="Active">Active</MenuItem>
                                                    <MenuItem value="In Active">In Active</MenuItem>
                                                </StyledInput>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Shift <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="shift"
                                            control={control}
                                            defaultValue={formData.shift}
                                            render={({ field }) => (

                                                <Autocomplete
                                                    {...field}
                                                    options={mapOptions(shifts)}
                                                    onChange={(event, value) => field.onChange(value?.value)}
                                                    isOptionEqualToValue={(option, value) => option.value === value}
                                                    renderInput={(params) => (
                                                        <StyledInput
                                                            {...params}
                                                            variant="outlined"
                                                            fullWidth
                                                            margin="normal"
                                                            error={!!errors.shift}
                                                            helperText={errors.shift ? errors.shift.message : ''}
                                                            FormHelperTextProps={{
                                                                style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                            }}
                                                        />
                                                    )}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Grade <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="grade"
                                            control={control}
                                            defaultValue={formData.grade}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    select
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.grade}
                                                    helperText={errors.grade ? errors.grade.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                >
                                                    <MenuItem value="L1">L1</MenuItem>
                                                    <MenuItem value="L2">L2</MenuItem>
                                                    <MenuItem value="L3">L3</MenuItem>
                                                    <MenuItem value="L4">L4</MenuItem>
                                                    <MenuItem value="L5">L5</MenuItem>
                                                    <MenuItem value="L5">L6</MenuItem>
                                                    <MenuItem value="L5">L7</MenuItem>
                                                </StyledInput>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Probation Period <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="probabationperiod"
                                            control={control}
                                            defaultValue={formData.probabationperiod}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.probabationperiod}
                                                    helperText={errors.probabationperiod ? errors.probabationperiod.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Salary Offered <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="salaryofferred"
                                            control={control}
                                            defaultValue={formData.salaryofferred}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.salaryofferred}
                                                    helperText={errors.salaryofferred ? errors.salaryofferred.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Attendance Bonus <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="attendancebonus"
                                            control={control}
                                            defaultValue={formData.attendancebonus}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    select
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.attendancebonus}
                                                    helperText={errors.attendancebonus ? errors.attendancebonus.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                >
                                                    <MenuItem value="Yes">Yes</MenuItem>
                                                    <MenuItem value="No">No</MenuItem>
                                                </StyledInput>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>

                            <Grid container xs={4} bgcolor={''}> {/* Third vertical page 2 Container */}

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Total Monthly CTC <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="totalmonthlyctc"
                                            control={control}
                                            defaultValue={formData.totalmonthlyctc}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.totalmonthlyctc}
                                                    helperText={errors.totalmonthlyctc ? errors.totalmonthlyctc.message : ''}
                                                    disabled
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Upload Address Prof <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="fileupload"
                                            control={control}
                                            // defaultValue={formData.addresprofpath}
                                            render={({ field }) => (
                                                <div>
                                                    <Button
                                                        variant="outlined"
                                                        component="label"
                                                        fullWidth
                                                        color="primary"
                                                        style={{ marginBottom: '8px' }}
                                                    >
                                                        Upload File
                                                        <input
                                                            type="file"
                                                            hidden
                                                            onChange={(e) => {
                                                                const file = e.target.files[0];
                                                                field.onChange(file);
                                                                setFormData((prev) => ({
                                                                    ...prev,
                                                                    addresprofpath: e.target.files[0].size,
                                                                }))
                                                                // onFileChange(file); // Optional function for handling file change
                                                            }}
                                                        />
                                                    </Button>
                                                    <FormHelperText style={{ color: errors.fileupload ? 'red' : 'inherit' }}>
                                                        {field.value ? field.value.name : 'No file selected'}
                                                    </FormHelperText>

                                                    <FormHelperText style={{ color: 'red' }}>
                                                        {errors.fileupload?.message}
                                                    </FormHelperText>
                                                    {/* <FormHelperText style={{ color: errors.fileupload ? 'red' : 'inherit' }}>
                                                    {errors.fileupload ? errors.fileupload.message : formData.fileupload?.name}
                                                </FormHelperText> */}
                                                </div>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Total Yearly CTC <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="totalyearlyctc"
                                            control={control}
                                            defaultValue={formData.totalyearlyctc}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.totalyearlyctc}
                                                    helperText={errors.totalyearlyctc ? errors.totalyearlyctc.message : ''}
                                                    disabled
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Billable Status <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="billablestatus"
                                            control={control}
                                            defaultValue={formData.billablestatus}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    select
                                                    variant="outlined"
                                                    fullWidth
                                                    margin="normal"
                                                    error={!!errors.billablestatus}
                                                    helperText={errors.billablestatus ? errors.billablestatus.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                >
                                                    <MenuItem value="Billable">Billable</MenuItem>
                                                    <MenuItem value="Non-Billable">Non-Billable</MenuItem>
                                                    <MenuItem value="Partially">Partially Billed</MenuItem>
                                                </StyledInput>
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>
                        </>
                    )}

                    {activeStep === 2 && (

                        <>

                            <Grid container xs={6} >
                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Current Address <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="currentaddress"
                                            control={control}
                                            defaultValue={formData.currentaddress || ''}
                                            render={({ field }) => (
                                                <MultilineTextField
                                                    fullWidth
                                                    multiline
                                                    rows={4}
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.currentaddress}
                                                    helperText={errors.currentaddress ? errors.currentaddress.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            currentaddress: e.target.value,
                                                        }));
                                                    }} />
                                            )}
                                        />
                                    </Grid>

                                </Grid>

                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Current City <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="currentCity"
                                            control={control}
                                            defaultValue={formData.currentCity}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.currentCity}
                                                    helperText={errors.currentCity ? errors.currentCity.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            currentCity: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Pincode <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="currentPincode"
                                            control={control}
                                            defaultValue={formData.currentPincode}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.currentPincode}
                                                    helperText={errors.currentPincode ? errors.currentPincode.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            currentPincode: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>

                            <Grid container xs={6} >
                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Permanent Address <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="permanentAddress"
                                            control={control}
                                            defaultValue={formData.permanentAddress}
                                            render={({ field }) => (
                                                <MultilineTextField
                                                    fullWidth
                                                    multiline
                                                    rows={4}
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.permanentAddress}
                                                    helperText={errors.permanentAddress ? errors.permanentAddress.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            permanentAddress: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Permanent City <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>

                                    <Grid item xs={7}>
                                        <Controller
                                            name="permanentcity"
                                            control={control}
                                            defaultValue={formData.permanentcity}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.permanentcity}
                                                    helperText={errors.permanentcity ? errors.permanentcity.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            permanentcity: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={12} alignItems="center" paddingBottom={3}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Pincode <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="permanentPincode"
                                            control={control}
                                            defaultValue={formData.permanentPincode}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.permanentPincode}
                                                    helperText={errors.permanentPincode ? errors.permanentPincode.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            permanentPincode: e.target.value,
                                                        }));
                                                    }}
                                                />

                                            )}
                                        />
                                    </Grid>
                                </Grid>


                            </Grid>




                            <Grid container alignItems="center" paddingBottom={3}>
                                <Grid item xs={4}>
                                    <FormControlLabel
                                        control={
                                            <Checkbox
                                                checked={copyToPermanent}
                                                onChange={handleCheckboxChange2}
                                                disabled={!(formData.currentaddress && formData.currentCity && formData.currentPincode)}
                                            />
                                        }
                                        label="Same as Current Address"
                                    />
                                </Grid>
                            </Grid>
                        </>
                    )}

                    {activeStep === 3 && (
                        < >

                            <Grid container xs={12} bgcolor={''} sx={{ borderBottom: '1px solid black', width: '20%' }}> {/* First Horizontal view page - 3 container */}

                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>


                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Previous Organization Name 1
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="organization1"
                                            control={control}
                                            defaultValue={formData.organization1}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.previousOrganizationName1}
                                                    helperText={errors.previousOrganizationName1 ? errors.previousOrganizationName1.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            organization1: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Designation
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="designation"
                                            control={control}
                                            defaultValue={formData.designation1}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.designation}
                                                    helperText={errors.designation ? errors.designation.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            designation1: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Start Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="startdate1"
                                            control={control}
                                            defaultValue={formData.startdate1}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            startdate1: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            End Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="enddate1"
                                            control={control}
                                            defaultValue={formData.enddate1}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            enddate1: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Total Experience ( In Years)
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="totalExperience1"
                                            control={control}
                                            defaultValue={formData.totalExperience1}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.totalExperience}
                                                    helperText={errors.totalExperience ? errors.totalExperience.message : ''}
                                                    disabled // Read-only input
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            totalExperience: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>


                            </Grid>


                            <Grid container xs={12} bgcolor={''} sx={{ borderBottom: '1px solid black' }} > {/* Second Horizontal view page - 3 container */}


                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>

                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Previous Organization Name 2
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="organization2"
                                            control={control}
                                            defaultValue={formData.organization2}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.organization1}
                                                    helperText={errors.organization1 ? errors.organization1.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            organization2: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Designation
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="designation2"
                                            control={control}
                                            defaultValue={formData.designation2}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.designation}
                                                    helperText={errors.designation ? errors.designation.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            designation2: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Start Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="startdate2"
                                            control={control}
                                            defaultValue={formData.startdate2}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            startdate2: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            End Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="enddate2"
                                            control={control}
                                            defaultValue={formData.enddate2}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            enddate2: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Total Experience ( In Years)
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="totalExperience2"
                                            control={control}
                                            defaultValue={formData.totalExperience2}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.totalExperience}
                                                    helperText={errors.totalExperience ? errors.totalExperience.message : ''}
                                                    disabled // Read-only input
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            totalExperience2: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>

                            </Grid>



                            <Grid container xs={12} bgcolor={''}> {/* Third Horizontal view page - 3 container */}

                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>

                                <Grid container xs={12} alignItems="center" paddingBottom={2}> {/*This is the empty oness... */}
                                    <Grid item xs={4}>
                                    </Grid>
                                    <Grid item xs={7}>
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Previous Organization Name 3
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="organization3"
                                            control={control}
                                            defaultValue={formData.organization3}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.previousOrganizationName1}
                                                    helperText={errors.previousOrganizationName1 ? errors.previousOrganizationName1.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            organization3: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Designation
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="designation3"
                                            control={control}
                                            defaultValue={formData.designation3}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.designation}
                                                    helperText={errors.designation ? errors.designation.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            designation3: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Start Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="startdate3"
                                            control={control}
                                            defaultValue={formData.startdate3}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            startdate3: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            End Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="enddate3"
                                            control={control}
                                            defaultValue={formData.enddate3}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    type="date"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.dateOfBirth}
                                                    helperText={errors.dateOfBirth ? errors.dateOfBirth.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            enddate3: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid container xs={4} alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Total Experience ( In Years)
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="totalExperience3"
                                            control={control}
                                            defaultValue={formData.totalExperience3}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.totalExperience}
                                                    helperText={errors.totalExperience ? errors.totalExperience.message : ''}
                                                    disabled
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            totalExperience3: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>

                        </>
                    )}

                    {activeStep === 4 && (
                        <>
                            <Grid xs={12} container > {/* First Horizontal View page - 4 regarding... */}

                                <Grid xs={6} container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Aadhaar Number <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="aadhaarnumber"
                                            control={control}
                                            defaultValue={formData.aadhaarnumber}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    error={!!errors.aadhaarnumber}
                                                    helperText={errors.aadhaarnumber ? errors.aadhaarnumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            aadhaarnumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={6} container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            PAN Number <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="pannumber"
                                            control={control}
                                            defaultValue={formData.pannumber}
                                            render={({ field }) => (
                                                <StyledInput
                                                    {...field}
                                                    variant="outlined"
                                                    fullWidth
                                                    error={!!errors.pannumber}
                                                    helperText={errors.pannumber ? errors.pannumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            pannumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={6} container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Passport Number
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="passportnumber"
                                            control={control}
                                            defaultValue={formData.passportnumber}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.passportnumber}
                                                    helperText={errors.passportnumber ? errors.passportnumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            passportnumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={6} container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            UAN Number
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="uannumber"
                                            control={control}
                                            defaultValue={formData.uannumber}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.uannumber}
                                                    helperText={errors.uannumber ? errors.uannumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            uannumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>


                            </Grid>
                            <Grid xs={12} container paddingTop={3}> {/* First Horizontal View page - 4 regarding... */}

                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <FormControlLabel
                                            control={
                                                <Checkbox
                                                    checked={isPFChecked}
                                                    onChange={handleCheckboxChange}
                                                    color="primary"
                                                />
                                            }
                                            label="Include PF"
                                        />
                                    </Grid>

                                    <Grid item xs={4}>
                                        <FormControlLabel
                                            control={
                                                <Checkbox
                                                    checked={isESIChecked}
                                                    onChange={handleCheckboxESIChange}
                                                    color="primary"
                                                />
                                            }
                                            label="Include ESI"
                                        />
                                    </Grid>

                                    <Grid item xs={4}>
                                        <FormControlLabel
                                            control={
                                                <Checkbox
                                                    checked={isLWFChecked}
                                                    onChange={handleCheckboxLWFChange}
                                                    color="primary"
                                                />
                                            }
                                            label="Include LWF"
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={4} container alignItems="center" paddingBottom={2} style={{ visibility: isPFChecked ? 'visible' : 'hidden' }} >
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            PF Number
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="pfnumber"
                                            control={control}
                                            defaultValue={formData.pfnumber || ''}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.pfnumber}
                                                    helperText={errors.pfnumber ? errors.pfnumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            pfnumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={4} container alignItems="center" paddingBottom={2} style={{ visibility: isESIChecked ? 'visible' : 'hidden' }}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            ESI Number
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="esinumber"
                                            control={control}
                                            defaultValue={formData.esinumber || ''}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.esinumber}
                                                    helperText={errors.esinumber ? errors.esinumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            esinumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={4} container alignItems="center" paddingBottom={2} style={{ visibility: isLWFChecked ? 'visible' : 'hidden' }} >
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            LWF Number
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="lwfnumber"
                                            control={control}
                                            defaultValue={formData.lwfnumber || ''}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    variant="outlined"
                                                    error={!!errors.lwfnumber}
                                                    helperText={errors.lwfnumber ? errors.lwfnumber.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            lwfnumber: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                                <Grid xs={4} container alignItems="center" paddingBottom={2} style={{ visibility: isPFChecked ? 'visible' : 'hidden', }} >
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            PF Join Date
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="pfjoindate"
                                            control={control}
                                            defaultValue={formData.pfjoindate}
                                            render={({ field }) => (
                                                <StyledInput
                                                    fullWidth
                                                    {...field}
                                                    type="date"
                                                    variant="outlined"
                                                    InputLabelProps={{ shrink: true }}
                                                    error={!!errors.pfjoindate}
                                                    helperText={errors.pfjoindate ? errors.pfjoindate.message : ''}
                                                    FormHelperTextProps={{
                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                    }}
                                                    onChange={(e) => {
                                                        field.onChange(e);
                                                        setFormData((prev) => ({
                                                            ...prev,
                                                            pfjoindate: e.target.value,
                                                        }));
                                                    }}
                                                />
                                            )}
                                        />
                                    </Grid>
                                </Grid>

                            </Grid>
                        </>
                    )}

                    {activeStep === 5 && (
                        <>
                            <Grid container xs={3}>
                                <Grid>

                                </Grid>
                            </Grid>
                            <Grid container xs={6} >
                                <Grid container alignItems="center" paddingBottom={2}>
                                    <Grid item xs={4}>
                                        <StyledLabel>
                                            Mention the mode of payment <span style={{ color: 'red' }}>*</span>
                                        </StyledLabel>
                                    </Grid>
                                    <Grid item xs={7}>
                                        <Controller
                                            name="modeofpayment"
                                            control={control}
                                            defaultValue={formData.modeofpayment}
                                            render={({ field }) => (
                                                <FormControl fullWidth variant="outlined" margin="normal" error={!!errors.modeofpayment}>
                                                    <InputLabel>
                                                        Payment Type <span style={{ color: 'red' }}>*</span>
                                                    </InputLabel>
                                                    <Select
                                                        {...field}
                                                        value={selectedPaymentType}
                                                        onChange={(e) => {
                                                            field.onChange(e);
                                                            handlePaymentTypeChange(e);
                                                            setFormData((prev) => ({
                                                                ...prev,
                                                                modeofpayment: e.target.value,
                                                            }));
                                                        }}
                                                        label="Payment Type"
                                                    >
                                                        <MenuItem value="cash">Cash</MenuItem>
                                                        <MenuItem value="banktransfer">Bank Transfer</MenuItem>
                                                        <MenuItem value="cheque">Cheque</MenuItem>
                                                        <MenuItem value="demanddraft">Demand Draft</MenuItem>
                                                    </Select>
                                                    <FormHelperText>
                                                        {errors.modeofpayment ? errors.modeofpayment.message : ''}
                                                    </FormHelperText>
                                                </FormControl>
                                            )}
                                        />
                                    </Grid>

                                    <Grid container alignItems="center" paddingBottom={2}>

                                        {selectedPaymentType === 'banktransfer' && (

                                            <Grid container paddingTop={2}>

                                                <Grid container alignItems="center" paddingBottom={2}>
                                                    <Grid item xs={4}>
                                                        <StyledLabel>
                                                            Bank Name <span style={{ color: 'red' }}>*</span>
                                                        </StyledLabel>
                                                    </Grid>
                                                    <Grid item xs={7}>
                                                        <Controller
                                                            name="bankname"
                                                            control={control}
                                                            defaultValue={formData.bankname}
                                                            render={({ field }) => (
                                                                <StyledInput
                                                                    {...field}
                                                                    variant="outlined"
                                                                    fullWidth
                                                                    error={!!errors.bankname}
                                                                    helperText={errors.bankname ? errors.bankname.message : ''}
                                                                    FormHelperTextProps={{
                                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                    }}
                                                                    onChange={(e) => {
                                                                        field.onChange(e);
                                                                        setFormData((prev) => ({
                                                                            ...prev,
                                                                            bankname: e.target.value,
                                                                        }));
                                                                    }}
                                                                />
                                                            )}
                                                        />
                                                    </Grid>
                                                </Grid>

                                                <Grid container alignItems="center" paddingBottom={2}>
                                                    <Grid item xs={4}>
                                                        <StyledLabel>
                                                            Branch Name <span style={{ color: 'red' }}>*</span>
                                                        </StyledLabel>
                                                    </Grid>
                                                    <Grid item xs={7}>
                                                        <Controller
                                                            name="branchname"
                                                            control={control}
                                                            defaultValue={formData.branchname}
                                                            render={({ field }) => (
                                                                <StyledInput
                                                                    {...field}
                                                                    variant="outlined"
                                                                    fullWidth
                                                                    error={!!errors.branchname}
                                                                    helperText={errors.branchname ? errors.branchname.message : ''}
                                                                    FormHelperTextProps={{
                                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                    }}
                                                                    onChange={(e) => {
                                                                        field.onChange(e);
                                                                        setFormData((prev) => ({
                                                                            ...prev,
                                                                            branchname: e.target.value,
                                                                        }));
                                                                    }}
                                                                />
                                                            )}
                                                        />
                                                    </Grid>
                                                </Grid>

                                                <Grid container alignItems="center" paddingBottom={2}>
                                                    <Grid item xs={4}>
                                                        <StyledLabel>
                                                            IFSC Code <span style={{ color: 'red' }}>*</span>
                                                        </StyledLabel>
                                                    </Grid>
                                                    <Grid item xs={7}>
                                                        <Controller
                                                            name="ifsccode"
                                                            control={control}
                                                            defaultValue={formData.ifsccode}
                                                            render={({ field }) => (
                                                                <StyledInput
                                                                    {...field}
                                                                    variant="outlined"
                                                                    fullWidth
                                                                    error={!!errors.ifsccode}
                                                                    helperText={errors.ifsccode ? errors.ifsccode.message : ''}
                                                                    FormHelperTextProps={{
                                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                    }}
                                                                    onChange={(e) => {
                                                                        field.onChange(e);
                                                                        setFormData((prev) => ({
                                                                            ...prev,
                                                                            ifsccode: e.target.value,
                                                                        }));
                                                                    }}
                                                                />
                                                            )}
                                                        />
                                                    </Grid>
                                                </Grid>

                                                <Grid container alignItems="center" paddingBottom={2}>
                                                    <Grid item xs={4}>
                                                        <StyledLabel>
                                                            Account Number <span style={{ color: 'red' }}>*</span>
                                                        </StyledLabel>
                                                    </Grid>
                                                    <Grid item xs={7}>
                                                        <Controller
                                                            name="accountNumber"
                                                            control={control}
                                                            defaultValue={formData.accountNumber}
                                                            render={({ field }) => (
                                                                <StyledInput
                                                                    {...field}
                                                                    variant="outlined"
                                                                    fullWidth
                                                                    error={!!errors.accountNumber}
                                                                    helperText={errors.accountNumber ? errors.accountNumber.message : ''}
                                                                    FormHelperTextProps={{
                                                                        style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                    }}
                                                                    onChange={(e) => {
                                                                        field.onChange(e);
                                                                        setFormData((prev) => ({
                                                                            ...prev,
                                                                            accountNumber: e.target.value,
                                                                        }));
                                                                    }}
                                                                />
                                                            )}
                                                        />
                                                    </Grid>
                                                </Grid>

                                                <Grid container alignItems="center" paddingBottom={2}>
                                                    <Grid item xs={4}>
                                                        <StyledLabel>
                                                            Beneficiary Code <span style={{ color: 'red' }}>*</span>
                                                        </StyledLabel>
                                                    </Grid>

                                                    <Grid item xs={0}>
                                                        <StyledLabel>
                                                            :
                                                        </StyledLabel>
                                                    </Grid>

                                                    <Grid item xs={0} alignItems='flex-start'>
                                                        <StyledLabel>
                                                            Sathiskumar20027090924
                                                        </StyledLabel>
                                                    </Grid>

                                                    {/* <Grid item xs={7}>
                                                    <Controller
                                                        name="accountnumber"
                                                        control={control}
                                                        defaultValue={formData.accountnumber}
                                                        render={({ field }) => (
                                                            <StyledInput
                                                                {...field}
                                                                variant="outlined"
                                                                fullWidth
                                                                error={!!errors.accountnumber}
                                                                helperText={errors.accountnumber ? errors.accountnumber.message : ''}
                                                                FormHelperTextProps={{
                                                                    style: { margin: 0, position: 'absolute', bottom: '-20px' }
                                                                }}
                                                            />
                                                        )}
                                                    />
                                                </Grid> */}
                                                </Grid>

                                            </Grid>

                                        )}
                                    </Grid>

                                </Grid>

                            </Grid>
                        </>
                    )}










    const [formData, setFormData] = React.useState({
        //First Page ---
        firstname: 'sssssss',
        lastname: 'sssssss',
        dateOfBirth: '2024-09-17', //Format of a data -( 2024/09/26 ) 
        employeeNumber: '0000',
        gender: 'Male',
        email: 'test34@gmail.com',
        mobileNumber: '9778164504',
        phone: '9778164504',
        bloodGroup: 'A',
        dateOfJoining: '2024-09-18',
        fathersName: 'testfathername',
        fathersOccupation: 'testfatheroccupation',
        countryOfOrigin: 'testindia',
        nationality: 'testIndian',
        emergencyContactName: 'testemergencycontactname',
        emergencyContactNumber: '8777842222',
        emergencyContactRelation: 'testemergencycontactrelation',
        spouseName: 'testspousename',
        physicallyChallenged: 'No',
        education: 'B.E.,',
        addressprofType: '',     // 21  // 17 // 6 // 5 // 15 // 8 // 6 

        //Second Page ---
        reportingmanager: 'Kannan R',
        reportingteamlead: 'Kannan R',
        designation: 'CEO',
        department: 'Executive',
        team: 'IT Team',
        referrdby: 'Santhosh',
        employmentstatus: 'Probation',
        employeestatus: 'Active',
        shift: '00:00 - 09:00',
        grade: 'L1',
        probabationperiod: '180',
        salaryofferred: '12000',
        totalmonthlyctc: '12000',
        attendancebonus: 'Yes',
        totalyearlyctc: '144000',
        billablestatus: 'Billable',
        addresprofpath: '',

        //Third page ---
        currentaddress: '',
        permanentAddress: '',
        currentCity: '',
        currentPincode: '',
        permanentcity: '',
        permanentPincode: '',


        //Fouth Page ---
        organization1: '',
        designation1: '',
        startdate1: '',
        enddate1: '',
        totalExperience1: '',

        organization2: '',
        designation2: '',
        startdate2: '',
        enddate2: '',
        totalExperience2: '',

        organization3: '',
        designation3: '',
        startdate3: '',
        enddate3: '',
        totalExperience3: '',

        //Fiveth page ----

        aadhaarnumber: '',
        pannumber: '',
        passportnumber: '',
        uannumber: '',
        pfnumber: '',
        pfjoindate: '',
        esinumber: '',
        lwfnumber: '',


        //Sixth page ----

        modeofpayment: '',
        bankname: '',
        branchname: '',
        ifsccode: '',
        accountNumber: '',
        beneficiarycode: '',
        
    });




     //Second Page ---

        // reportingmanager: 'Kannan R',
        // reportingteamlead: 'Kannan R',
        // designation: 'CEO',
        // department: 'Executive',
        // team: 'IT Team',
        // referrdby: 'Santhosh',
        // employmentstatus: 'Probation',
        // employeestatus: 'Active',
        // shift: '00:00 - 09:00',
        // grade: 'L1',
        // probabationperiod: '180',
        // salaryofferred: '12000',
        // totalmonthlyctc: '12000',
        // attendancebonus: 'Yes',
        // totalyearlyctc: '144000',
        // billablestatus: 'Billable',
        // addresprofpath: '',

        //Third page ---

        // currentaddress: '',
        // permanentAddress: '',
        // currentCity: '',
        // currentPincode: '',
        // permanentcity: '',
        // permanentPincode: '',


        //Fouth Page ---

        // organization1: '',
        // designation1: '',
        // startdate1: '',
        // enddate1: '',
        // totalExperience1: '',

        // organization2: '',
        // designation2: '',
        // startdate2: '',
        // enddate2: '',
        // totalExperience2: '',

        // organization3: '',
        // designation3: '',
        // startdate3: '',
        // enddate3: '',
        // totalExperience3: '',

        //Fiveth page ----

        // aadhaarnumber: '',
        // pannumber: '',
        // passportnumber: '',
        // uannumber: '',
        // pfnumber: '',
        // pfjoindate: '',
        // esinumber: '',
        // lwfnumber: '',


        //Sixth page ----

        // modeofpayment: '',
        // bankname: '',
        // branchname: '',
        // ifsccode: '',
        // accountNumber: '',
        // beneficiarycode: '',